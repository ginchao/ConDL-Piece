loadstring(game:HttpGet("https://raw.githubusercontent.com/MiniNoobie/ShiftLockx/main/Shiftlock-MiniNoobie",true))()     
local DiscordLib = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/discord%20lib.txt")()
local win = DiscordLib:Window("Test Hub")
local per = game.Players.LocalPlayer.Name
 DiscordLib:Notification("Test Hub","Hello! "..""..per..".                                              ".."Thanks For Using Test Hub","Ok") 
local serv = win:Server("ConDL Piece", "https://www.roblox.com/headshot-thumbnail/image?userId="..game.Players.LocalPlayer.UserId.."&width=1000&height=1000&format=png")
local drops = serv:Channel("Mob")
local moblist = {}
local mob = nil
for i, v in pairs(game:GetService("Workspace").Monster:GetChildren()) do
if v.Name ~= "Boss" then
table.insert(moblist,v.Name)
end
end
local drop = drops:Dropdown("Pick", moblist, function(a)
mob = a
end)
drops:Toggle("Auto Bring Mob",false, function(a)
local b = nil
getgenv().fast = a
function mk()
if getgenv().fast then
if mob == "Boss" then
game.Workspace.Monster[mob]["Moi Boss"].HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,-4)
else
for i, v in pairs(game.Workspace.Monster[mob]:GetChildren()) do
v.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,-4)
end
end
end
end
game.RunService.RenderStepped:Connect(mk)
end)
drops:Button("Tele Mob",function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Monster[mob][mob].HumanoidRootPart.CFrame
end)
local drops = serv:Channel("Boss")
local moblist = {}
local mob2 = nil
for i, v in pairs(game:GetService("Workspace").Monster.Boss:GetChildren()) do
table.insert(moblist,v.Name)
end
local drop = drops:Dropdown("Pick", moblist, function(a)
mob2 = a
end)
drops:Toggle("Auto Bring Boss",false, function(a)
local b = nil
getgenv().boss = a
function mk()
if getgenv().boss then
game.Workspace.Monster.Boss[mob2].HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,-4)
end
end
game.RunService.RenderStepped:Connect(mk)
end)
drops:Button("Tele Boss",function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Monster.Boss[mob2].HumanoidRootPart.CFrame
end)
drops:Toggle("Auto Bring All Boss",false, function(boss)
getgenv().bossw = boss
local bs = nil
function boss()
if getgenv().bossw then
for i, v in pairs(game.Workspace.Monster.Boss:GetChildren()) do
if v.Name ~= "Realistic chicken" then
v.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,-2)
end
end
end
end
bs = game.RunService.RenderStepped:Connect(boss)
end)
local drops = serv:Channel("Weapon")
  local Weaponlist = {}  
  local Weapon = nil  
  for i, v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do  
  if v:IsA("Tool") then  
          table.insert(Weaponlist,v.Name)  
  end  
  end  
  local drop = drops:Dropdown("Pick", Weaponlist, function(m)  
  for i, k in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do  
  if m == k.Name then  
          Weapon = m  
  if Weapon then  
  game.Players.LocalPlayer.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(Weapon))  
  end  
  end  
  end  
  end)  
  drops:Button("Refresh Weapon", function()  
  drop:Clear()  
  for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do  
  if v:IsA("Tool") then  
  drop:Add(v.Name)  
  end  
  end  
  end)  
  drops:Toggle("Auto Equip",false, function(a) 
 if Weapon == nil then 
 DiscordLib:Notification("Warning", "Choose Weapon to AutoEquip", "Ok") 
 elseif Weapon ~= nil then 
          AutoEquiped = a  
 end 
  end)  
  spawn(function()  
          while wait() do  
                  if AutoEquiped then  
                          pcall(function()  
                                  game.Players.LocalPlayer.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(Weapon))  
                          end)  
                  end  
          end  
  end)  

drops:Toggle("Auto Attack And Auto Skill",false,function(a)
getgenv().fas = a
while fas do wait()
pcall(function()
for i, v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
if v:IsA("RemoteEvent") and v.Name == "Fire" then
v:FireServer()
end
end
end)
end
end)
 drops:Toggle("Grabtools",false, function(I)  
  getgenv().autograb = I  
  spawn(function()  
  while autograb==true do wait()  
  if not getgenv().autograb then break end  
  local humanoid = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")          
  for _, child in ipairs(workspace:GetChildren()) do  
  if game.Players.LocalPlayer.Character and child:IsA("BackpackItem") and child:FindFirstChild("Handle") then  
  humanoid:EquipTool(child)  
  end  
  end  
  end  
  end)  
  end) 
 local tgls = serv:Channel("Player")   
  local plrlist = {}  
  local plr = nil  
  for i, v in pairs(game:GetService("Players"):GetChildren()) do  
  table.insert(plrlist,v.Name)  
  end  
  local drop = tgls:Dropdown("Choose Player", plrlist, function(m)  
  for i, b in pairs(game:GetService("Players"):GetPlayers()) do  
  if m == b.name then  
  plr = m  
  end  
  end  
  end)  
  tgls:Button("Refresh Player", function()  
  drop:Clear()  
  for i, v in pairs(game.Players:GetChildren()) do  
  drop:Add(v.Name)  
  end  
  end)  
  tgls:Button("Teleport To Player", function()   
  if plr == nil then  
  DiscordLib:Notification("Warning", "Choose Player to Teleport Player", "Ok")  
  elseif plr ~= nil then  
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[plr].Character.HumanoidRootPart.CFrame   
  end  
   end)   
  tgls:Toggle("Spectate Player",false, function(h)  
  if plr == nil then  
  DiscordLib:Notification("Warning", "Choose Player to Spectate", "Ok")  
  elseif plr ~= nil then  
  getgenv().view = h  
  spawn(function()  
  while view do wait()  
  workspace.CurrentCamera.CameraSubject = game.Players[plr].Character  
  if view == false then  
  workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character  
  end  
  end  
  end)  
  end  
  end)  
  
   tgls:Toggle("Auto Teleport Player",false, function(t)   
  if plr == nil then  
  DiscordLib:Notification("Warning", "Choose Player to Auto Teleport Player", "Ok")  
  elseif plr ~= nil then  
    local v2 = nil 
 getgenv().autele = t 
 if v2 then a:Disconnect() end 
 if autele ~= v2 then 
 v2 = game.RunService.RenderStepped:Connect(function() 
 if autele == false then v2:Disconnect() end game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[plr].Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 6) wait()   
   end)   
   end   
   end 
   end)   
   tgls:Toggle("Auto Bring Player",false, function(a)   
  if plr == nil then  
  DiscordLib:Notification("Warning", "Choose Player to Bring Player", "Ok")  
  elseif plr ~= nil then  
   local v2 = nil 
 getgenv().bri = a 
 if v2 then a:Disconnect() end 
 if bri ~= v2 then 
 v2 = game.RunService.RenderStepped:Connect(function() 
 if bri == false then v2:Disconnect() end game.Players[plr].Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -5) wait()   
   end)   
  end  
  end  
   end)   
   tgls:Toggle("Auto Tween Bring Player",false, function(p)   
  if plr == nil then  
  DiscordLib:Notification("Warning", "Choose Player to Tween Bring Player", "Ok")  
  elseif plr ~= nil then  
   getgenv().autobri = p   
   spawn(function()   
   while autobri do wait()   
   pcall(function()   
  
   local ok = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)   
   local tween = game.TweenService:Create(game.Players[plr].Character.HumanoidRootPart, TweenInfo.new(), {CFrame = ok * CFrame.new(0, 5, 0)})    
   tween:Play() wait()   
  
   end)   
   end   
   end)   
  end  
   end)   
   tgls:Toggle("Auto Bring All Player",false, function(t)   
   local v2 = nil 
 getgenv().brin = t 
 if v2 then a:Disconnect() end 
 if brin ~= v2 then 
 v2 = game.RunService.RenderStepped:Connect(function() 
 if brin == false then v2:Disconnect() end 
  for i, v in pairs(game.Players:GetChildren()) do  
  local ok = game.Players.LocalPlayer.Name  
  if v.Name ~=  ok  then   
  v.Character.HumanoidRootPart.CFrame  = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -7) wait()  
  end  
  end  
  end)  
  end  
   end)  
  local sldrs = serv:Channel("Walk Speed")   
  sldrs:Button("Clear", function(v)   
   game.Players.LocalPlayer.Character.Humanoid.HipHeight = 2   
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16   
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50   
   end)   
   local sldr = sldrs:Slider("Speeds", 0, 1000, 0, function(v)   
  
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v   
   end)   
   sldrs:Button("Speed 1000", function()   
   sldr:Change(1000)   
   end)   
   sldrs:Button("Speed 500", function()   
   sldr:Change(500)   
   end)   
   sldrs:Button("Speed 300", function()   
   sldr:Change(300)   
   end)   
   sldrs:Button("Speed 100", function()   
   sldr:Change(100)   
   end)   
   sldrs:Button("Speed 50", function()   
   sldr:Change(50)   
   end)   
   sldrs:Button("Speed 30", function()   
   sldr:Change(30)   
   end)   
   local sldr = sldrs:Slider("Jumps", 0, 1000, 0, function(v)   
  
   game.Players.LocalPlayer.Character.Humanoid.JumpPower = v   
   end)   
   sldrs:Button("Jump 1000", function()   
   sldr:Change(1000)   
   end)   
   sldrs:Button("Jump 500", function()   
   sldr:Change(500)   
   end)   
   sldrs:Button("Jump 300", function()   
   sldr:Change(300)   
   end)   
   sldrs:Button("Jump 100", function()   
   sldr:Change(100)   
   end)   
   sldrs:Button("Jump 70", function()   
   sldr:Change(70)   
   end)   
   local sldr = sldrs:Slider("height", 0, 100, 0, function(v)   
   game.Players.LocalPlayer.Character.Humanoid.HipHeight = v   
   end)   
   sldrs:Button("height 100", function()   
   sldr:Change(100)   
   end)   
   sldrs:Button("height 50", function()   
   sldr:Change(50)   
   end)   
   sldrs:Button("height 30", function()   
   sldr:Change(30)   
   end)   
   sldrs:Button("height 10", function()   
   sldr:Change(10)   
   end)  
local drops = serv:Channel("IsLand")
local islandlist = {}  
  local island = nil  
  for i, v in pairs(game:GetService("Workspace").Island:GetChildren()) do  
  table.insert(islandlist,v.Name)  
  end  
  local drop = drops:Dropdown("Pick", islandlist, function(m)  
  island = m
end)
drops:Button("Teleport Island",function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Island[island].WorldPivot*CFrame.new(-85.100000,3,0)
end)
 local btns = serv:Channel("Mics")   
    btns:Button("WallSky", function()    
  
     Local = game:GetService('Players').LocalPlayer     
     Char  = Local.Character     
     touched,tpdback = false, false     
     Local.CharacterAdded:connect(function(char)     
         if script.Disabled ~= true then     
             wait(.25)     
             loc = Char.HumanoidRootPart.Position     
             Char:MoveTo(box.Position + Vector3.new(0,.5,0))     
         end     
     end)     
     game:GetService('UserInputService').InputBegan:connect(function(key)     
         if key.KeyCode == Enum.KeyCode.Equals then     
             if script.Disabled ~= true then     
                 script.Disabled = true     
                 print'you may re-execute'     
             end     
         end     
     end)     
     box = Instance.new('Part',workspace)     
     box.Anchored = true     
     box.CanCollide = true     
     box.Size = Vector3.new(100000,2,100000)     
     box.Position = Vector3.new(100,8000,100)     
     box.Touched:connect(function(part)     
         if (part.Parent.Name == Local.Name) then     
             if touched == false then     
                 touched = true     
                 function apply()     
                     if script.Disabled ~= true then     
                         no = Char.HumanoidRootPart:Clone()     
                         wait(.25)     
                         Char.HumanoidRootPart:Destroy()     
                         no.Parent = Char     
                         Char:MoveTo(loc)     
                         touched = false     
                     end end     
                 if Char then     
                     apply()     
                 end     
             end     
         end     
     end)     
     repeat wait() until Char     
     loc = Char.HumanoidRootPart.Position     
     Char:MoveTo(box.Position + Vector3.new(0,.5,0))     
     end)     
     btns:Button("Fast Mode", function()     
     local ToDisable = {     
             Textures = true,     
             VisualEffects = true,     
             Parts = true,     
             Particles = true,     
             Sky = true     
     }     
  
     local ToEnable = {     
             FullBright = false     
     }     
  
     local Stuff = {}     
  
     for _, v in next, game:GetDescendants() do     
             if ToDisable.Parts then     
                     if v:IsA("Part") or v:IsA("Union") or v:IsA("BasePart") then     
                             v.Material = Enum.Material.SmoothPlastic     
                             table.insert(Stuff, 1, v)     
                     end     
             end     
  
             if ToDisable.Particles then     
                     if v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Explosion") or v:IsA("Sparkles") or v:IsA("Fire") then     
                             v.Enabled = false     
                             table.insert(Stuff, 1, v)     
                     end     
             end     
  
             if ToDisable.VisualEffects then     
                     if v:IsA("BloomEffect") or v:IsA("BlurEffect") or v:IsA("DepthOfFieldEffect") or v:IsA("SunRaysEffect") then     
                             v.Enabled = false     
                             table.insert(Stuff, 1, v)     
                     end     
             end     
  
             if ToDisable.Textures then     
                     if v:IsA("Decal") or v:IsA("Texture") then     
                             v.Texture = ""     
                             table.insert(Stuff, 1, v)     
                     end     
             end     
  
             if ToDisable.Sky then     
                     if v:IsA("Sky") then     
                             v.Parent = nil     
                             table.insert(Stuff, 1, v)     
                     end     
             end     
     end     
  
     game:GetService("TestService"):Message("Effects Disabler Script : Successfully disabled "..#Stuff.." assets / effects. Settings :")     
  
     for i, v in next, ToDisable do     
             print(tostring(i)..": "..tostring(v))     
     end     
  
     if ToEnable.FullBright then     
         local Lighting = game:GetService("Lighting")     
  
         Lighting.FogColor = Color3.fromRGB(255, 255, 255)     
         Lighting.FogEnd = math.huge     
         Lighting.FogStart = math.huge     
         Lighting.Ambient = Color3.fromRGB(255, 255, 255)     
         Lighting.Brightness = 5     
         Lighting.ColorShift_Bottom = Color3.fromRGB(255, 255, 255)     
         Lighting.ColorShift_Top = Color3.fromRGB(255, 255, 255)     
         Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)     
         Lighting.Outlines = true     
     end     
     end)  
  btns:Button("Rejoin", function()  
  local tps = game:GetService("TeleportService")  
                  local plr = game:GetService("Players").LocalPlayer  
                  tps:TeleportToPlaceInstance(game.PlaceId, game.JobId, plr)  
          end)  
  local inf = nil  
  btns:Toggle("Infjump", false, function(v)  
  if inf then inf:Disconnect() end  
  getgenv().infi = v  
  local Player = game.Players.LocalPlayer  
  if infi ~= inf then  
  inf = game.UserInputService.JumpRequest:Connect(function()  
  if infi == false then inf:Disconnect() end  
      Player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)  
  wait()  
  end)  
  end  
  end)  
  btns:Label("Cre Hub:Grabiel Ynu")  
  btns:Button("Universal, Test Hub", function()  
  loadstring(game:HttpGet("https://raw.githubusercontent.com/ginchao/TestHub/main/Universal"))()  
  end)  
  btns:Label("Script")  
     btns:Button("Tele Tool", function()      
      mouse = game.Players.LocalPlayer:GetMouse()      
      tool = Instance.new("Tool")      
      tool.RequiresHandle = false      
      tool.Name = "Tele Tool"      
      tool.Activated:connect(function()      
      local pos = mouse.Hit+Vector3.new(0,2.5,0)      
      pos = CFrame.new(pos.X,pos.Y,pos.Z)      
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos      
      end)      
      tool.Parent = game.Players.LocalPlayer.Backpack      
      end)     
  btns:Button("Infinte yield", function()  
  loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()  
  end)  
    btns:Button("Anti Afk", function()     
     loadstring(game:HttpGet("https://raw.githubusercontent.com/ginchao/Anti-AFK/main/NO%20KICK" ,true))()     
     end)     
     btns:Button("Keyboard", function()  loadstring(game:HttpGet("https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt", true))()        
    end)              
     btns:Button("FlyV3", function()  loadstring(game:HttpGet("https://raw.githubusercontent.com/XNEOFF/FlyGuiV3/main/FlyGuiV3.txt"))()    
    end)     
     btns:Button("Shift Lock", function()         loadstring(game:HttpGet("https://raw.githubusercontent.com/MiniNoobie/ShiftLockx/main/Shiftlock-MiniNoobie",true))()     
     end) 
